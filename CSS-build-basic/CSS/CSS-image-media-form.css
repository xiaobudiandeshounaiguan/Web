/* HTML5 还涵盖了一些特性，它们允许 Web 开发者表示哪些区域是必填的，甚至还能标识待填入的内容类型。
如果用户输入了一些未预料的内容，或者让必填区域空白，浏览器会显示一个错误信息。不同的浏览器在它们给
这样的物件的样式化和自定义余地的问题上，并没有达成一致。
正如在本教程的 HTML 部分的form styling课里解释的那样，许多更加复杂的输入类型是由操作系统渲染的，
无法进行样式化。因而你应该总是假设表单在不同的访客看来十分不同，并在许多浏览器上测试复杂的表单。 */


/* 替换元素 img,iframe,vedio */
img {
    /* size: cover; no*/
    object-fit: cover;
    
}


/* 以下是表单 */

/* 一些浏览器中，表单元素默认不会继承字体样式，因此如果你想要确保你的表单填入区域使用 body 中或者
一个父元素中定义的字体，你需要向你的 CSS 中加入这条规则。 */
button,
input,
select,
textarea {
    font-family: inherit;
    font-size: 100%;
}


/* 跨浏览器的 form 元素对于不同的挂件使用不同的盒子约束规则。你已经在我们的盒模型课中学习了box-sizing属性
，在样式化表单时候，你可以使用这一知识，确保在给 form 元素设定宽度和高度时可以有统一的体验。

为了保证统一，将所有元素的内外边距均设为0是个好主意，然后在单独进行样式化控制的时候将这些加回来。 */
button,
input,
select,
textarea {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}
/* 文本域溢出自动滚动条 */
textarea {
    overflow: auto;
}

/* 将上三项合并后 */
/* 通用样式表被许多开发者用作所有项目的一系列基础样式，典型就是那些做了和以上提到相似的事情的那些，
在你开始自己的 CSS 作业前，它确保了跨浏览器的任何事情都被默认设定为统一样式。它们不像以往那么重要了
，因为浏览器显著地要比以往更加统一。但是，如果你想要看一个例子，可以看看这个Normalize.css，它被许多项目
用作基础，是非常流行的样式表。 */
button,
input,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  padding: 0; margin: 0;
}

textarea {
  overflow: auto;
} 